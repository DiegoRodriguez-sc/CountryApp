{"version":3,"sources":["helpers/api.js","components/country/CountryScreen.js","components/search/Search.js","components/country/CountryCard.js","components/HomeScreen.js","components/ui/NavLogo.js","routers/AppRouter.js","CountryApp.js","index.js"],"names":["getCountry","country","a","url","axios","get","response","searchCountry","getcountryData","CountryScreen","history","countryCode","useParams","useState","loading","setLoading","setCountry","useEffect","code","data","className","onClick","length","push","goBack","src","flag","alt","name","nativeName","Intl","NumberFormat","format","population","region","subregion","capital","topLevelDomain","currencies","languages","map","len","borders","border","to","Search","onSearch","selectOptions","search","setSearch","handleSubmit","e","preventDefault","onSubmit","placeholder","onChange","target","value","type","CountryCard","num","alpha3Code","HomeScreen","countries","setCountries","setNotFound","searching","setSearching","setRegion","getCountriesRegion","console","log","getCountries","alpha2Code","NavLogo","mode","setMode","theme","localStorage","getItem","setItem","document","body","classList","add","remove","AppRouter","exact","path","component","CountryApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.06f16cc1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getCountry = async (country) => {\r\n  try {\r\n    let url = `https://restcountries.eu/rest/v2/name/${country}`;\r\n    const response = await axios.get(url);\r\n    return response;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n };\r\n\r\n\r\n\r\nexport const searchCountry = async (country) => {\r\n try {\r\n   let url = `https://restcountries.eu/rest/v2/alpha/${country}`;\r\n   const response = await axios.get(url);\r\n   return response;\r\n } catch (err) {\r\n   return err;\r\n }\r\n};\r\n\r\nexport const getcountryData = async (url) => {\r\n try {\r\n   const response = await axios.get(url);\r\n   return response;\r\n } catch (err) {\r\n  return err;\r\n }\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { searchCountry } from \"../../helpers/api\";\r\n\r\nconst CountryScreen = ({ history }) => {\r\n  const { countryCode } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [country, setCountry] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCountry = async (code) => {\r\n      setLoading(true);\r\n      const { data } = await searchCountry(code);\r\n      setCountry(data);\r\n      setLoading(false);\r\n    };\r\n    getCountry(countryCode);\r\n  }, [countryCode]);\r\n\r\n  const handleReturn = ()=>{\r\n    if(history.length <= 2){\r\n      history.push(\"/\");\r\n    }else{\r\n      history.goBack();\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"countryscreen__container\">\r\n      <button className=\"countryscreen__btn\" onClick={handleReturn} ><i className=\"fas fa-long-arrow-alt-left\"></i>back </button>\r\n      {!loading ? (\r\n          <div className=\"countryscreen__body-img-text\">\r\n            <div className=\"countryscreen__img-container\">\r\n              <img src={country.flag} alt=\"asd\" />\r\n            </div>\r\n            <div className=\"countryscreen__text-container\">\r\n              <div className=\"countryscreen__country-info\">\r\n                <h2>{country.name}</h2>\r\n                <div className=\"countryscreen__country-p\">\r\n                  <p>\r\n                    <span>Native Name: </span>\r\n                    {country.nativeName}\r\n                  </p>\r\n                  <p>\r\n                    <span>Population: </span>\r\n                    {new Intl.NumberFormat().format(country.population)}\r\n                  </p>\r\n                  <p>\r\n                    <span>Region: </span>\r\n                    {country.region}\r\n                  </p>\r\n                  <p>\r\n                    <span>Sub Region: </span>\r\n                    {country.subregion}\r\n                  </p>\r\n                  <p>\r\n                    <span>Capital: </span>\r\n                    {country.capital}\r\n                  </p>\r\n                  <p>\r\n                    <span>Top Level Domain: </span>\r\n                    {country.topLevelDomain}\r\n                  </p>\r\n                  <p>\r\n                    <span>Currencies: </span>\r\n                    {country.currencies[0].name}\r\n                  </p>\r\n                  <p>\r\n                    <span>Lenguages: </span>\r\n                    {country.languages.map((len) => `${len.name}, `)}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"countryscreen__country-border\"><span>Border Countries: </span><div className=\"countryscreen__links\"> {country.borders.map(border =>(\r\n                 <Link key={border} className=\"countryscreen__link-border\" to={`/country/${border}`} > {border}</Link>\r\n              ))}</div></div>\r\n            </div>\r\n          </div>\r\n      ) : (\r\n        <div className=\"loading__country-screen\">\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default CountryScreen;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Search = ({ onSearch , selectOptions }) => {\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleChangeInput = (e) => {\r\n    setSearch(e.target.value);\r\n    if (e.target.value.length === 0) {\r\n      onSearch(null);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    onSearch(search);\r\n  };\r\n\r\n  const handleOptions = (e)=>{\r\n      selectOptions(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"search__container\">\r\n      <div className=\"search__input-container\">\r\n        <form onSubmit={handleSubmit} className=\"search__input\">\r\n          <input placeholder=\"Search country...\" onChange={handleChangeInput} />\r\n          <button type=\"submit\" className=\"search__btn\"><i className=\"fas fa-search\"></i></button>\r\n        </form>\r\n      </div>\r\n      <div className=\"search__continents\">\r\n        <select name=\"select-continents\" className=\"search__options-continents\" onChange={handleOptions}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"africa\">Africa</option>\r\n          <option value=\"americas\">Americas</option>\r\n          <option value=\"asia\">Asia</option>\r\n          <option value=\"europe\">Europe</option>\r\n          <option value=\"oceania\">Oceania</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CountryCard = ({country}) => {\r\n\r\n const { name, population, region, capital, flag ,alpha3Code} = country;\r\n\r\n const formatNumber = (num)=>{\r\n    return new Intl.NumberFormat().format(num);\r\n }\r\n\r\n return (\r\n    <Link className=\"homepage__card\" to={`/country/${alpha3Code}`} >\r\n    <div>\r\n       <img src={flag} alt={`${name}-flag`} />\r\n        <h4>{name}</h4>\r\n        <p> <span>Population:</span>  {formatNumber(population)}</p>\r\n        <p> <span>Region:</span>  {region}</p>\r\n       <p> <span>Capital:</span>  {capital}</p>\r\n    </div>\r\n   </Link>\r\n )\r\n}\r\n\r\nexport default CountryCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Search from './search/Search';\r\nimport { getCountry, getcountryData } from '../helpers/api';\r\nimport CountryCard from './country/CountryCard';\r\n\r\nconst HomeScreen = () => {\r\n  const [countries, setCountries] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n  const [region, setRegion] = useState(\"all\");\r\n\r\n  const getCountriesRegion = async(region) => {\r\n    try {\r\n      setLoading(true);\r\n      const {data} = await getcountryData(`https://restcountries.eu/rest/v2/region/${region}`);\r\n      setCountries(data);\r\n      setLoading(false);\r\n      setNotFound(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setNotFound(true);\r\n    }\r\n  };\r\n\r\n  const getCountries = async() => {\r\n    try {\r\n      setLoading(true);\r\n      const {data} = await getcountryData(\"https://restcountries.eu/rest/v2/all\");\r\n      setCountries(data);\r\n      setLoading(false);\r\n      setNotFound(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setNotFound(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!searching){\r\n      if(region === \"all\"){\r\n        getCountries();\r\n      }\r\n      else{\r\n        console.log(region)\r\n        getCountriesRegion(region);\r\n\r\n      }\r\n    }\r\n  }, [region, searching]);\r\n\r\n\r\n  const onSearch = async (country) => {\r\n    if (!country) {\r\n      setSearching(false);\r\n      return\r\n    }\r\n    setLoading(true);\r\n    setNotFound(false);\r\n    setSearching(true);\r\n    const {data} = await getCountry(country);\r\n    if (!data) {\r\n      setNotFound(true);\r\n      setLoading(false);\r\n      return;\r\n    } else {\r\n      setCountries(data);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n return (\r\n  <div className=\"homepage__container\">\r\n      <Search onSearch={onSearch} selectOptions={setRegion} />\r\n      <div className=\"homepage__cards-container\">\r\n        { loading \r\n        ? ( <div className=\"loading__homepage\">\r\n          <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>)\r\n        : (\r\n          countries.map(country => <CountryCard key={country.alpha2Code} country={country} />)\r\n        )\r\n        }\r\n      </div>    \r\n  </div>\r\n )\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from 'react'; \r\n\r\nconst NavLogo = () => {\r\n\r\n const [mode, setMode] = useState(false);\r\n const handleChangeMode = ()=>{\r\n      setMode(!mode);\r\n }\r\n useEffect(() => {\r\n    \r\n    const theme = localStorage.getItem(\"theme\");\r\n     if(theme){\r\n        if(theme===\"light\"){\r\n           setMode(true)\r\n        }else{\r\n           setMode(false)\r\n        }\r\n      }else{\r\n         localStorage.setItem(\"theme\",mode?\"light\":\"dark\");   \r\n      }\r\n    \r\n // eslint-disable-next-line react-hooks/exhaustive-deps\r\n }, []);\r\n useEffect(() => {\r\n      if(mode){\r\n         localStorage.setItem(\"theme\",\"light\");\r\n       document.body.classList.add('light');\r\n     }else{\r\n        localStorage.setItem(\"theme\",\"dark\");\r\n      document.body.classList.remove('light');\r\n     }\r\n  }, [mode]);\r\n\r\n return (\r\n  <div className=\"navlogo__header\">\r\n     <h1>Where in the World ?</h1>\r\n     <div className=\"navlogo__btn\" onClick={handleChangeMode}>{mode? <div><i className=\"fas fa-moon\"></i> Dark Mode</div>: <div><i className=\"far fa-sun\"></i> Light Mode</div>}</div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default NavLogo\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport CountryScreen from \"../components/country/CountryScreen\";\r\nimport HomeScreen from \"../components/HomeScreen\";\r\nimport NavLogo from \"../components/ui/NavLogo\";\r\n\r\nconst AppRouter = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <NavLogo />\r\n      <div>\r\n        <Switch>\r\n          <Route  exact path=\"/\" component={HomeScreen}  />\r\n          <Route  exact path=\"/country/:countryCode\" component={CountryScreen}  />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport AppRouter from './routers/AppRouter';\r\n\r\nconst CountryApp = () => {\r\n return (\r\n    <AppRouter />\r\n )\r\n}\r\n\r\n\r\nexport default CountryApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CountryApp from './CountryApp';\nimport \"./styles/styles.scss\";\n\nReactDOM.render(\n    <CountryApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}